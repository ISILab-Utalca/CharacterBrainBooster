using ArtificialIntelligence.Utility;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace CBB.InternalTool
{
    public class #SCRIPTNAME# : ActionState
    {
        #region Fields

        #endregion

        #region Methods
        protected internal override void Awake()
        {
            base.Awake();
        }
        public override void StartExecution(GameObject target = null)
        {
            base.StartExecution();
            StartCoroutine(Act());
        }
        public override void InterruptExecution()
        {
            base.InterruptExecution();
        }
        public override void FinishExecution()
        {
            base.FinishExecution();
        }
        public override List<Option> GetOptions()
        {
            return ScoreSingleOption(out Option option) != null ? new List<Option> { option } : null;
        }
        protected override IEnumerator Act(GameObject target = null)
        {
            yield return new WaitForSeconds(1);
            FinishExecution();
        }
        #endregion

    }
}